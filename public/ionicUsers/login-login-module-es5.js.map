{"version":3,"sources":["src/app/login/login.page.html","src/app/auth.service.ts","src/app/login/login-routing.module.ts","src/app/login/login.module.ts","src/app/login/login.page.scss","src/app/login/login.page.ts","src/app/user.model.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>login</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-item *ngIf=\\\"errorMessage\\\" color=\\\"danger\\\">{{ errorMessage }}</ion-item>\\n  \\n  <ion-item>\\n    <ion-label position=\\\"floating\\\">Username</ion-label>\\n    <ion-input type=\\\"text\\\" name=\\\"username\\\" [(ngModel)]=\\\"user.username\\\"></ion-input>\\n  </ion-item>\\n\\n  <ion-item>\\n    <ion-label position=\\\"floating\\\">Password</ion-label>\\n    <ion-input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\"></ion-input>\\n  </ion-item>\\n\\n  <ion-button color=\\\"primary\\\" expand=\\\"full\\\" (click)=\\\"onSubmit()\\\">Submit</ion-button>\\n</ion-content>\"","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './user.model';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  //Set up the URL\n\n  private url: string;\n\n  constructor(private http: HttpClient) {\n    let l = window.location;\n    let host:string;\n    //Are we running under Ionic or in a production environment?\n    if(l.port >= '8100'){\n      host = 'localhost:3000';\n    }else{\n      host = l.hostname + ((l.port.length>0)?':' + l.port:'');\n    }\n\n    this.url = `${l.protocol}//${host}/api/auth/`;\n  }\n\n  register(user: User): Observable<User>{\n    return this.http.post<User>(this.url + 'register', user, httpOptions);\n  }\n\n  logIn(user: User): Observable<User>{\n    return this.http.post<User>(this.url + 'login', user, httpOptions);\n  }\n\n  logOut(): Observable<User>{\n    return this.http.delete<User>(this.url + 'logout');\n  }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from '../auth.service';\nimport { User } from '../user.model';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  user:User = new User();\n  errorMessage: string;\n\n  constructor(\n    private authService: AuthService\n  ) {}\n\n  ngOnInit() {}\n\n  response(response): void{\n    if(response.success===false){\n      this.errorMessage = 'Invalid Credentials';\n    }\n\n    if(response.success===true){\n      window.location.href='/#/users';\n    }\n\n  }\n\n  public onSubmit(): void{\n    this.authService.logIn(this.user).subscribe(\n      (response:any) => {\n       this.response(response);\n      }\n    );\n  }\n}","export class User{\n    _id: string;\n    email: string;\n    first_name: string;\n    last_name: string;\n    username: string;\n    password: string;\n}"],"sourceRoot":"webpack:///","file":"login-login-module-es5.js"}